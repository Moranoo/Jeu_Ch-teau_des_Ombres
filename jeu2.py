import random
import time
import sys
import threading

NOM_DU_JEU = "Ch√¢teau des Ombres"

def verifier_arret(entree):
    if entree.lower() == "stop":
        print("Vous avez choisi de quitter le jeu. √Ä bient√¥t !")
        sys.exit()

personnages = {
    "Guerrier": {"avantage": "Squelette", "desavantage": "Fant√¥me", "hp": 120},
    "Mage": {"avantage": "Fant√¥me", "desavantage": "Loup-Garou", "hp": 100},
    "Chasseur": {"avantage": "Loup-Garou", "desavantage": "Squelette", "hp": 110}
}

monstres = [
    {"type": "Squelette", "hp": 20, "attaque": (3, 8), "niveau": 1},
    {"type": "Fant√¥me", "hp": 30, "attaque": (5, 10), "niveau": 2, "peut_suivre": True},
    {"type": "Loup-Garou", "hp": 50, "attaque": (10, 15), "niveau": 3},
    {"type": "Gobelin", "hp": 15, "attaque": (2, 6), "niveau": 1, "empoisonne": True},
    {"type": "Sorci√®re", "hp": 40, "attaque": (8, 12), "niveau": 2, "paralyse": True}
]

pouvoirs_possibles = {
    "contre_fantome": "R√©duit les attaques des fant√¥mes ou endort d‚Äôautres monstres",
    "contre_loup_garou": "R√©duit les attaques des loups-garous ou affaiblit d‚Äôautres monstres",
    "contre_squelette": "Inflige des d√©g√¢ts aux squelettes ou ralentit d‚Äôautres monstres"
}

pouvoirs_acquis = []

def animation_repos():
    print("üí§ Vous vous reposez... üí§")
    for _ in range(3):
        print("üí§ ", end="", flush=True)
        time.sleep(1)
    print("\nVous vous sentez rafra√Æchi et pr√™t √† avancer !\n")

def animation_exploration():
    print("Vous commencez √† explorer...")
    for _ in range(3):
        print("üîç ", end="", flush=True)
        time.sleep(1)
    print("\nExploration termin√©e !\n")

def animation_ouverture_porte():
    print("\nVous avancez vers la porte suivante...")
    for i in range(3, 0, -1):
        print(f"Ouverture de la porte dans... {i}")
        time.sleep(1)
    print("üö™ La porte s'ouvre lentement... et vous entrez dans la nouvelle pi√®ce ! üö™\n")

def enigme(joueur_hp):
    enigmes = [
        {"question": "Quel est le pluriel de 'cheval' ?", "reponse": "chevaux", "recompense": "contre_fantome"},
        {"question": "Combien font 7 + 5 ?", "reponse": "12", "recompense": "contre_loup_garou"},
        {"question": "Quel est le masculin de 'chienne' ?", "reponse": "chien", "recompense": "contre_squelette"},
        {"question": "Combien font 6 x 3 ?", "reponse": "18", "recompense": "contre_fantome"},
        {"question": "Quel est le pluriel de 'animal' ?", "reponse": "animaux", "recompense": "contre_loup_garou"},
        {"question": "Quel est le masculin de 'vache' ?", "reponse": "veau", "recompense": "contre_squelette"},
        {"question": "Combien font 9 - 4 ?", "reponse": "5", "recompense": "contre_fantome"},
        {"question": "Quel est le pluriel de 'chien' ?", "reponse": "chiens", "recompense": "contre_loup_garou"},
        {"question": "Quel est le f√©minin de 'taureau' ?", "reponse": "vache", "recompense": "contre_squelette"}
        ]

    enigme = random.choice(enigmes)
    print("\nVous trouvez une √©nigme sur le mur :")
    print(enigme["question"])

    reponse = None

    def demander_reponse():
        nonlocal reponse
        reponse = input("Votre r√©ponse (vous avez 10 secondes) : ")

    thread = threading.Thread(target=demander_reponse)
    thread.start()

    thread.join(timeout=10)

    if reponse is None:
        print("\nTemps √©coul√© ! Vous perdez 5 points de vie.")
        joueur_hp -= 5
    elif reponse.lower() == enigme["reponse"]:
        pouvoirs_acquis.append(enigme["recompense"])
        print(f"Bonne r√©ponse ! Vous avez gagn√© le pouvoir '{enigme['recompense']}' !")
    else:
        print("Mauvaise r√©ponse ! Vous perdez 5 points de vie.")
        joueur_hp -= 5

    return joueur_hp

def choix(joueur_hp, niveau, personnage, nom_personnage, peut_reposer):
    print("\nQue souhaitez-vous faire ?")
    print("1. Explorer la pi√®ce voisine.")
    print("2. Chercher des indices ou des √©nigmes dans la pi√®ce actuelle.")
    if peut_reposer:
        print("3. Se reposer et r√©cup√©rer des points de vie.")
    print("Entrez 'power' pour voir vos pouvoirs et points de vie.")

    action = input("Entrez le num√©ro de votre choix ou 'stop' pour quitter : ")
    verifier_arret(action)

    if action == "1":
        joueur_hp = explorer(joueur_hp, niveau, personnage, nom_personnage)
    elif action == "2":
        animation_exploration()

        if random.random() < 0.3:
            print("Vous ne trouvez rien d'int√©ressant ici.")
        elif random.random() < 0.3:
            monstre = random.choice(monstres)
            print(f"Un {monstre['type']} surgit pendant votre recherche !")
            joueur_hp = combat(joueur_hp, monstre, personnage)
        else:
            print("Attendez... ah ! Vous trouvez quelque chose !")
            joueur_hp = enigme(joueur_hp)

    elif action == "3" and peut_reposer:
        animation_repos()

        if random.random() < 0.2:
            monstre = random.choice(monstres)
            print(f"Un {monstre['type']} vous d√©range pendant votre repos !")
            joueur_hp = combat(joueur_hp, monstre, personnage)
        else:
            joueur_hp = se_reposer(joueur_hp)
            peut_reposer = False

    elif action.lower() == "power":
        afficher_statistiques(joueur_hp)
    else:
        print("Choix invalide. Veuillez r√©essayer.")
        return choix(joueur_hp, niveau, personnage, nom_personnage, peut_reposer)

    print("\nVous √™tes maintenant dans une nouvelle pi√®ce.\n")
    return joueur_hp, peut_reposer

def explorer(joueur_hp, niveau, personnage, nom_personnage):
    animation_ouverture_porte()

    evenement = random.choice(["monstre", "objet", "vide", "piege", "pnj"])

    if evenement == "monstre":
        possible_monstres = [monstre for monstre in monstres if monstre["niveau"] <= niveau]
        if possible_monstres:
            monstre = random.choice(possible_monstres)
            print(f"Un {monstre['type']} surgit avec {monstre['hp']} points de vie !")
            joueur_hp = combat(joueur_hp, monstre, personnage)
    elif evenement == "objet":
        objet = random.choice(["une potion de soin", "un ancien manuscrit"])
        print(f"Vous trouvez {objet}.")
        if objet == "une potion de soin":
            gain = random.randint(10, 20)
            joueur_hp += gain
            print(f"Vous utilisez la potion et r√©cup√©rez {gain} points de vie. Points de vie actuels : {joueur_hp}.")
    elif evenement == "piege":
        print("Vous tombez dans un pi√®ge ! Vous perdez 10 points de vie.")
        joueur_hp -= 10
    elif evenement == "pnj":
        pnj = random.choice(["un vieux sage", "un marchand", "un aventurier perdu"])
        print(f"Vous rencontrez {pnj}.")
        if pnj == "un vieux sage":
            print("Le sage vous donne un conseil pr√©cieux.")
        elif pnj == "un marchand":
            print("Le marchand vous offre un objet sp√©cial.")
            objet = random.choice(["une potion de soin", "un ancien manuscrit"])
            if objet == "une potion de soin":
                gain = random.randint(10, 20)
                joueur_hp += gain
                print(f"Vous utilisez la potion et r√©cup√©rez {gain} points de vie. Points de vie actuels : {joueur_hp}.")
        elif pnj == "un aventurier perdu":
            print("L'aventurier vous demande de l'aide. Vous gagnez un alli√© temporaire.")
    else:
        print("La pi√®ce est vide, mais vous sentez une atmosph√®re √©trange.")

    print("\nVous √™tes maintenant dans une nouvelle pi√®ce.\n")
    return joueur_hp

def afficher_statistiques(joueur_hp):
    print("\n==== Statistiques ====")
    print(f"Points de vie : {joueur_hp}")
    print("Pouvoirs acquis :")
    for pouvoir in pouvoirs_acquis:
        print(f"- {pouvoir} : {pouvoirs_possibles[pouvoir]}")
    print("======================\n")

def se_reposer(joueur_hp):
    recup_hp = random.randint(5, 20)
    joueur_hp += recup_hp
    print(f"Vous r√©cup√©rez {recup_hp} points de vie. Points de vie actuels : {joueur_hp}.")
    return joueur_hp

def combat(joueur_hp, monstre, personnage):
    print(f"Vous affrontez un {monstre['type']} avec {monstre['hp']} points de vie.")

    while monstre["hp"] > 0 and joueur_hp > 0:
        print("\nQue souhaitez-vous faire ?")
        print("1. Attaquer le monstre.")
        print("2. Bloquer la prochaine attaque.")
        print("3. Tenter de fuir.")

        if pouvoirs_acquis:
            for idx, pouvoir in enumerate(pouvoirs_acquis, start=4):
                print(f"{idx}. Utiliser '{pouvoir}' ({pouvoirs_possibles[pouvoir]})")

        choix = input("Entrez le num√©ro de votre choix : ")
        verifier_arret(choix)

        if choix == "1":
            dommage = random.randint(5, 15)
            if monstre["type"] == personnage["avantage"]:
                dommage += 5
                print(f"Avantage ! Vous infligez {dommage} points de d√©g√¢t au {monstre['type']}.")
            elif monstre["type"] == personnage["desavantage"]:
                dommage -= 3
                print(f"D√©savantage... Vous infligez seulement {dommage} points de d√©g√¢t.")
            monstre["hp"] -= dommage
            if monstre["hp"] <= 0:
                print(f"Vous avez vaincu le {monstre['type']} !")
                break

        elif choix == "2":
            blocage = random.randint(0, 10)
            joueur_hp += blocage
            print(f"Vous bloquez partiellement l'attaque et regagnez {blocage} points de vie.")

        elif choix == "3":
            if random.choice([True, False]):
                print("Vous avez r√©ussi √† fuir!")
                return joueur_hp
            else:
                print("La fuite a √©chou√©! Le monstre attaque.")

        elif choix.isdigit() and int(choix) >= 4 and int(choix) - 4 < len(pouvoirs_acquis):
            pouvoir = pouvoirs_acquis[int(choix) - 4]
            if pouvoir == "contre_fantome" and monstre["type"] == "Fant√¥me":
                print("Vous utilisez votre pouvoir sp√©cial contre le fant√¥me ! Il dispara√Æt dans un nuage de fum√©e.")
                monstre["hp"] = 0
            elif pouvoir == "contre_loup_garou" and monstre["type"] == "Loup-Garou":
                print("Vous utilisez votre pouvoir sp√©cial contre le loup-garou ! Il est affaibli et perd l‚Äôenvie de combattre.")
                monstre["hp"] -= 15
            elif pouvoir == "contre_squelette" and monstre["type"] == "Squelette":
                print("Vous utilisez votre pouvoir contre le squelette, infligeant de lourds d√©g√¢ts !")
                monstre["hp"] -= 20
            else:
                print("Vous utilisez un pouvoir hors de son contexte : le monstre est confus et perd un tour.")
                monstre["hp"] -= 5 if monstre["hp"] > 5 else 0

            pouvoirs_acquis.pop(int(choix) - 4)

            if monstre["hp"] <= 0:
                print(f"Le {monstre['type']} a √©t√© vaincu gr√¢ce √† votre pouvoir !")
                break

        else:
            print("Choix invalide.")
            continue

        if monstre["hp"] > 0:
            attaque_monstre = random.randint(*monstre["attaque"])
            joueur_hp -= attaque_monstre
            print(f"Le {monstre['type']} vous attaque et inflige {attaque_monstre} points de d√©g√¢t. Points de vie restants : {joueur_hp}")

    if joueur_hp <= 0:
        print("Vous avez √©t√© vaincu... Game Over.")
    return joueur_hp

def choisir_personnage():
    print("Choisissez votre personnage :")
    for idx, (nom, details) in enumerate(personnages.items(), start=1):
        print(f"{idx}. {nom} (HP: {details['hp']}, Avantage: {details['avantage']}, D√©savantage: {details['desavantage']})")

    choix = int(input("Entrez le num√©ro de votre choix : ")) - 1
    nom_personnage = list(personnages.keys())[choix]
    personnage = personnages[nom_personnage]

    return personnage, nom_personnage

def introduction():
    print(f"Bienvenue dans {NOM_DU_JEU} !")
    print("Vous √™tes un aventurier intr√©pide qui a entendu parler d'un tr√©sor l√©gendaire cach√© dans les profondeurs du ch√¢teau.")
    print("Votre objectif est de survivre aux dangers qui vous attendent et de d√©couvrir le tr√©sor avant qu'il ne soit trop tard.")
    print("Bonne chance, aventurier !\n")

def jouer():
    introduction()
    personnage, nom_personnage = choisir_personnage()
    joueur_hp = personnage["hp"]
    niveau = 1
    peut_reposer = True

    while joueur_hp > 0:
        joueur_hp, peut_reposer = choix(joueur_hp, niveau, personnage, nom_personnage, peut_reposer)
        niveau += 1
        peut_reposer = True
        if joueur_hp <= 0:
            print("Vous avez perdu tous vos points de vie. Fin de l'aventure.")
            break
        if random.choice([True, False, False, False]):
            print("Vous avez trouv√© la sortie du ch√¢teau ! F√©licitations, vous avez surv√©cu √† cette aventure myst√©rieuse.")
            break

if __name__ == "__main__":
    jouer()
